# -*- coding: utf-8 -*-
"""
Created on Fri Aug 12 11:17:26 2022

@author: mcveigh
"""

#Starting with a GBK file containing a mix of sequences from different organisms. 
#Find all identical sequences from the same organism. Used to trim a list of rRNA sequences removing duplicates 
#GBK file generated by seqfetch -dn -Q missing_archaea_accs  -c 3 -t 3 > missing_archaea.gbk

import pandas as pd
import Bio
import os
import sys

inputfile = sys.argv[1]
outputfile = sys.argv[2]

from Bio import SeqIO
sequences = [] 
sequencelength = []
orgname = []
uniquenames = []
duplicatenames = []
unique = []
summary = []

for seq_record in SeqIO.parse(inputfile, "genbank"):    
    #str_id = seq_record.id
    orgname = seq_record.annotations["organism"]
    #seq_record.description = seq_record.annotations["organism"]
    #sequences.append(seq_record)
    #seqlength = '%s %i\n' %  (seq_record.id, len(seq_record))
    #sequencelength.append(seqlength)
    if orgname not in uniquenames:
        uniquenames.append(orgname)
    else:
        duplicatenames.append(orgname)
#print(uniquenames)       
print("duplicate names ", duplicatenames)       
#Need to create a dictionary of all sequences with a uniquename and compare

for name in uniquenames:
    #print("first name is ", name)
    d = dict()
    records = []
    for seq_record in SeqIO.parse(inputfile, "genbank"):  
        str_id = seq_record.id
        orgname = seq_record.annotations["organism"]
        seq_record.description = seq_record.annotations["organism"]
        sequences.append(seq_record)
        if orgname == name:
            records.append(seq_record)
            #print("name pairs ", orgname, name)
    for record in records:
        if record.seq in d:
            d[record.seq].append(record)
        else:
            d[record.seq] = [record]
            unique.append(record)
            summary.append(record.id + '\t' + record.description)

for record.seq, record_set in d.items():
    print (record.description + ': (' + str(len(record_set)) + ' sequence found)')
    for record in record_set:
        print ('identical seqs are: ' + record.id + " " + record.description)
for record in unique:
    print ('uniques are: ' + record.id + " " + record.description)
SeqIO.write(unique, outputfile, "fasta")  

with open('summary.out', 'w') as fp:
    for item in summary:
        fp.write("%s\n" % item)   











   

